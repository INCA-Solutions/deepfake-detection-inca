[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deepfake-detection-inca"
version = "0.1.0"
description = "A deepfake detection system using advanced machine learning techniques"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "INCA Solutions", email = "contact@inca-solutions.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch==2.6.0",
    "torchaudio==2.6.0",
    "torchvision==0.21.0",
    "lightning==2.5.0",
    "transformers==4.50.0",
    "tqdm==4.67.1",
    "timm==1.0.14",
    "matplotlib==3.10.0",
    "seaborn==0.13.2",
    "scikit-learn==1.6.1",
    "rich==13.9.4",
    "wandb==0.21.3",
    "pydantic>=2.9.2",
    "fire==0.7.0",
    "peft==0.14.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.9.3",
    "ipykernel==6.29.5",
]

[project.urls]
Homepage = "https://github.com/INCA-Solutions/deepfake-detection-inca"
Repository = "https://github.com/INCA-Solutions/deepfake-detection-inca"
Issues = "https://github.com/INCA-Solutions/deepfake-detection-inca/issues"

[project.scripts]
deepfake-detect = "src.run:main"
deepfake-inference = "inference:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.wheel.sources]
"src" = "deepfake_detection_inca"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
    "C901", # complex condition
    "E501", # line too long
    "F401", # imported but unused
    "F403", # from module import * used; unable to detect undefined names
    "F405", # name may be undefined, or defined from star imports: module
    "E741", # ambiguous variable name
]

select = [
    "C", # flake8-comprehensions
    "E", "W", # pycodestyle
    "F", # pyflakes
    "I", # isort
]

[tool.ruff.lint.isort]
force-to-top = ["autoroot", "autorootcwd"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["E402"]

[tool.pyright]
exclude = [
    "**/__pycache__",
    "wandb",
    "datasets",
    "outputs",
    "runs",
]
typeCheckingMode = "off"